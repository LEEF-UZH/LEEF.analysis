---
title: "Verify Reclassification and Data Cleaning of LEEF-2 data"
author: "Rainer M Krug"

format:
  html:
    dev: png
    fig_width: 10
    fig_height: 12
    toc: true
    toc_float: true
    toc_collapsed: true
    code_folding: hide  
    embed-resources: true
params:
  release: "v2.3.3-LEEF-2"
  repo: "https://github.com/LEEF-UZH/LEEF.parameter/"
  output_dir: "/Volumes/RRD.Reclassification_LEEF-2/"
  db: "LEEF-2.RRD.sqlite"
  extracted_dir: "/Volumes/LEEF-2_archive/archive/extracted/"
  toc: "/Volumes/LEEF/0.TOC/LEEF-2/toc.rds"
  min_FSC.A: 2
  cores: 7
  remove_all:
    - airbubbles
    - OtherCiliate
    - Debris_and_other
    - Cryptomonas
  remove_flowcam:
    - Dexiostoma
    - Coleps_irchel
    - Colpidium
    - Loxocephallus
    - Tetrahymena
  keep_flowcytometer:
    - bacteria
    - algae
  diagnostic_report: false
  parquet: true
  timestamps:
    - 20221107
    - 20221109
    - 20221111
    - 20221114
    - 20221116
    - 20221118
    - 20221121
    - 20221123
    - 20221125
    - 20221128
    - 20221130
    - 20221202
    - 20221205
    - 20221207
    - 20221209
    - 20221212
    - 20221214
    - 20221216
    - 20221219
    - 20221221
    - 20221223
    - 20221226
    - 20221228
    - 20221230
    - 20230102
    - 20230104
    - 20230106
    - 20230109
    - 20230111
    - 20230113
    - 20230116
    - 20230118
    - 20230120
    - 20230123
    - 20230125
    - 20230127
    - 20230130
    - 20230201
    - 20230203
    - 20230206
    - 20230208
    - 20230210
    - 20230213
    - 20230215
    - 20230217
    - 20230220
    - 20230222
    - 20230224
    - 20230227
    - 20230301
    - 20230303
    - 20230306
    - 20230308
    - 20230310
    - 20230313
    - 20230315
    - 20230317
    - 20230320
    - 20230322
    - 20230324
    - 20230327
    - 20230329
    - 20230331
    - 20230403
    - 20230405
    - 20230407
    - 20230410
    - 20230412
    - 20230414
    - 20230417
    - 20230419
    - 20230421
    - 20230424
    - 20230426
    - 20230428
    - 20230501
    - 20230503
    - 20230505
    - 20230508
    - 20230510
    - 20230512
    - 20230515
    - 20230517
    - 20230519
    - 20230522
    - 20230524
    - 20230526
    - 20230529
    - 20230531
    - 20230602
    - 20230605
    - 20230607
    - 20230609
    - 20230612
    - 20230614
    - 20230616
    - 20230619
    - 20230621
    - 20230623
    - 20230626
    - 20230628
    - 20230630
    - 20230703
    - 20230705
    - 20230707
    - 20230710
    - 20230712
    - 20230714
    - 20230717
    - 20230719
    - 20230721
    - 20230724
    - 20230726
    - 20230728
    - 20230731
    - 20230802
    - 20230804
    - 20230807
    - 20230809
    - 20230811
  species_bemovi_16:
    - Coleps_irchel
    - Colpidium
    - Stylonychia2
    - Paramecium_caudatum
    - Paramecium_bursaria
    - Euplotes
    - Loxocephallus
  species_bemovi_25:
    - Coleps_irchel
    - Colpidium
    - Stylonychia2
    - Paramecium_caudatum
    - Paramecium_bursaria
    - Euplotes
    - Loxocephallus
    - Debris_and_other (not needed in final RRD but needed for detection of faulty videos)
  species_bemovi_25_cropped:
    - Loxocephallus
    - Debris_and_other (not needed in final RRD but needed for detection of faulty videos)
  species_flowcam:
    - Chlamydomonas
    - Cryptomonas (probably died out so not present)
    - Loxocephallus
    - ColpidiumVacuoles
    - Debris (not necessarily --- Ask Romana)
    - DigestedAlgae
    - Small_unidentified
    - DividingChlamydomonas
    - ChlamydomonasClumpsLarge
    - ChlamydomonasClumpsSmall
    - CiliateCysts (not necessarily --- Ask Romana)
    - CystsWhite (not necessarily --- Ask Romana)
    - DigestedWhite (not necessarily --- Ask Romana)
    - Small_cells
  species_flowcytometer:
    - Bacteria
    - Algae
---

# Preparation
  
```{r setup, include=FALSE}
library(LEEF.analysis)
library(dplyr)
library(knitr)

if (!exists("params")) {
    params <- rmarkdown::yaml_front_matter('~/git/0.RPackages/LEEF/analysis/LEEF.analysis/inst/LEEF-2/LEEF-2 Reclassification_and_Data_Cleaning - Verification.qmd')$params
}

options(RRDarrow = "/Volumes/RRD.Reclassification_LEEF-2/parquet/")

densities <- arrow_read_density() |>
    arrange(day)
o2 <- arrow_read_table(table = "o2") %>% collect()
water_chem <- arrow_read_table("toc") %>% collect()

exp_timestamps <- params$timestamps[params$timestamps < as.integer(format(Sys.Date(), "%Y%m%d"))]
```
# Check presence of all timestamps in all methods

## Generally missing or to many

### Additional timestamps
```{r}
densities |>
  select(timestamp) |>
  filter(!(timestamp %in% exp_timestamps)) |>
  rename(additional_timestamps = timestamp) |>
  knitr::kable()
```

### Additional timestamps
```{r}
densities |>
  select(timestamp) |>
  reframe(missing_timestamps = as.numeric(exp_timestamps[which(!(exp_timestamps %in% unique(timestamp)))])) |>
  knitr::kable()
```

## measurements
```{r}
missing_timestamps <- densities %>%
    group_by(measurement, bottle) %>%
    reframe(missing_timestamps = as.numeric(exp_timestamps[which(!(exp_timestamps %in% unique(timestamp)))]))

missing_timestamps |>
    arrange(missing_timestamps, bottle) |>
    knitr::kable()
```

### bemovi_16
```{r}
missing_timestamps |>
    filter(measurement == "bemovi_16") |>
    select(measurement, missing_timestamps) |>
    distinct() |>
    arrange() |>
    knitr::kable()
```

### bemovi_25
```{r}
missing_timestamps |>
    filter(measurement == "bemovi_25") |>
    select(measurement, missing_timestamps) |>
    distinct() |>
    arrange() |>
    knitr::kable()
```

### bemovi_25_cropped
```{r}
missing_timestamps |>
    filter(measurement == "bemovi_25_cropped") |>
    select(measurement, missing_timestamps) |>
    distinct() |>
    arrange() |>
    knitr::kable()
```

### flowcam
```{r}
missing_timestamps |>
    filter(measurement == "flowcam") |>
    select(measurement, missing_timestamps) |>
    distinct() |>
    arrange() |>
    knitr::kable()
```

### flowcytometer
```{r}
missing_timestamps |>
    filter(measurement == "flowcytometer") |>
    select(measurement, missing_timestamps) |>
    distinct() |>
    arrange() |>
    knitr::kable()
```


## O2 measurements

```{r}
missing_timestamps_o2 <- o2 %>%
    group_by(sensor, bottle) %>%
    reframe(missing_timestamps = as.numeric(exp_timestamps[which(!(exp_timestamps %in% unique(timestamp)))])) # %>%
# dplyr::filter(
#     !(missing_timestamps == 20211208 & bottle == "b_01" & sensor == 4),
#     missing_timestamps != 20211201,
# ) # Previously confirmed missing data is filtered out
missing_timestamps_o2 |>
    arrange(missing_timestamps, bottle, sensor) |>
    knitr::kable()
```  

## Water chemistry

```{r}
missing_timestamps_wc <- water_chem %>%
    group_by(inj_type, bottle) %>%
    reframe(missing_timestamps = as.numeric(exp_timestamps[which(!(exp_timestamps %in% unique(timestamp)))]))
table(missing_timestamps_wc$missing_timestamps, missing_timestamps_wc$bottle) |>
    knitr::kable()

missing_timestamps_wc |>
    arrange(missing_timestamps, bottle, inj_type) |>
    knitr::kable()
```

# Diagnostic Report
```{r}
LEEF_2_report_diagnostic(arrow = TRUE)
```