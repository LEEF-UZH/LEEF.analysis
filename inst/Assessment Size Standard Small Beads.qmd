---
title: "Assessment Size Standard 20230327_beads_threshold_fsc"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
params: 
  root_dir: "~/Desktop/size_check_beads/"

---

## Assessment of Size Standards

ADD HOW CALCULATED / EXTRACTED

```{r}
#| label: setup
#| 
#| 

library(ggplot2)
library(LEEF.analysis)
library(dplyr)
```

```{r}
# log transform everything which had not been transformed in the pipeline
samples <- c("20230324_beads_threshold_fsc20", "20230327_beads_threshold_fsc")

traits <- lapply(
  samples,
  function(sample){
    if (file.exists(file.path(params$root_dir, sample, "traits.rds"))) {
      traits <- readRDS(file.path(params$root_dir, sample, "traits.rds"))
    } else {
      fsa <- readRDS(file.path(params$root_dir, sample, "2.extracted_data", "flowcytometer", "flowcytometer_fsa_ungated.rds"))
      fsa <- flowCore::transform(
        fsa,
        flowCore::transformList(
          c("FL2-A", "FL1-H", "FL2-H", "FL3-H", "FL4-H", "FSC-H", "SSC-H"),
          flowCore::truncateTransform("truncate at 1")
        )
      )
      fsa <- flowCore::transform(
        fsa,
        flowCore::transformList(
          c("FL2-A", "FL1-H", "FL2-H", "FL3-H", "FL4-H", "FSC-H", "SSC-H"), 
          "log10"
        )
      )
      
      metadata <- utils::read.csv(file.path(params$root_dir, sample, "2.extracted_data", "flowcytometer", "metadata_flowcytometer.csv"))
      
      gates_coordinates <- data.frame(
        bacteria1 = c(3.301029996, 3.301029996, 7.204119983, 7.204119983), 
        bacteria2 = c(0,           3.301029996, 6.301029996, 0.         ), 
        LNA =       c(3.301029996, 4.579784,    NA,          NA         ), 
        MNA =       c(4.579785,    4.954243,    NA,          NA         ), 
        HNA =       c(4.954244,    7.204119983, NA,          NA         ), 
        algae1 =    c(3,           3,           7.204119983, 7.204119983), 
        algae2 =    c(3.301029996, 7.204119983, 7.204119983, 3.301029996)
      )
      
      traits <- LEEF.measurement.flowcytometer::extract_traits(
        particles = "all",
        metadata_flowcytometer = metadata,
        use_H = FALSE, 
        excl_FSCA_0 = FALSE,
        timestamp = 99999999,
        gates_coordinates = gates_coordinates,
        fsa = fsa
      )[[1]]
      
      traits$beads[traits$sample == "A01"] <- "0.2"
      traits$beads[traits$sample == "A02"] <- "0.45"
      traits$beads[traits$sample == "A03"] <- "0.88"
      traits$beads[traits$sample == "A04"] <- "1.25"
      traits$beads[traits$sample == "A05"] <- "1, 3, 10"
      traits$beads[traits$sample == "A06"] <- "1, 3, 10"
      
      saveRDS(traits, file.path(params$root_dir, sample, "traits.rds"))
      
      return(traits)
    }
  }
)

```

## The one from the Means
```{r}
#| label: ss_means
#| 
ss_repaired <- list()
ss_repaired$data <- data.frame(
  diameter_micrometer = c(1L, 3L, 10L), 
  mean_FSC.A = c(102045L, 641752L, 1959230L), 
  mean_FSC.H = c(106576L, 648403L, 1303073L)
)

ss_repaired$fit.A <- lm(ss_repaired$data$diameter_micrometer ~ ss_repaired$data$mean_FSC.A)
ss_repaired$slope_A <- ss_repaired$fit.A$coefficients[[2]]
ss_repaired$intercept_A <- ss_repaired$fit.A$coefficients[[1]]

ss_repaired$fit.H <- lm(ss_repaired$data$diameter_micrometer ~ ss_repaired$data$mean_FSC.H)
ss_repaired$slope_H <- ss_repaired$fit.H$coefficients[[2]]
ss_repaired$intercept_H <- ss_repaired$fit.H$coefficients[[1]]
```

## The one from all points
### 0.45 Beads
```{r}
beads_size <- "0.45"

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bw = 0.01)

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = SSC.A)) + 
  ggplot2::geom_density(bw = 0.01)
```

### 0.88 Beads
```{r}
beads_size <- "0.88"

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bw = 0.01)

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = SSC.A)) + 
  ggplot2::geom_density(bw = 0.01)
```

### 1.25 Beads
```{r}
beads_size <- "1.25"

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bw = 0.01)

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = SSC.A)) + 
  ggplot2::geom_density(bw = 0.01)
```


### 1, 3, 10 Beads
```{r}
beads_size <- "1, 3, 10"

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bounds = c(3.5,8), bw = 0.01)

traits[[1]] |> 
  dplyr::filter(beads == beads_size) |>
  ggplot(aes( x = SSC.A)) + 
  ggplot2::geom_density(bounds = c(3.5, 7), bw = 0.01)
```

### Density distribution of FSC.A
Horizontal lines indicate the mean_FSC.A as in the size standards 1 - 3 - 10, left to right.

```{r}
traits |> ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bounds = c(0, 8)) + 
  geom_vline(xintercept = c(log10(96374L), log10(653207L), log10(1855322L)), col = "green") +
  geom_vline(xintercept = c(0.30103, 7.22472), col = "red")
traits |> ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bounds = c(4.5, 6.5)) + 
  geom_vline(xintercept = c(log10(96374L), log10(653207L), log10(1855322L)), col = "green") +
  geom_vline(xintercept = c(0.30103, 7.22472), col = "red")
```

### Equidistand borders
```{r}
#| label: peaks
#| 

d <- 0.24
r1 <- log10(ss_repaired$data$mean_FSC.A[[1]]) + c(-d, d)
r3 <- log10(ss_repaired$data$mean_FSC.A[[2]]) + c(-d, d)
r10 <- log10(ss_repaired$data$mean_FSC.A[[3]]) + c(-d, d)
rl <- c(r1, r3, r10)

```

```{r}
#| label: do_fit
traits.fit <- traits

traits.fit$length <- NA

traits.fit$length[(traits.fit$FSC.A >= r1[1]) & (traits.fit$FSC.A <= r1[2])] <- 1
traits.fit$length[(traits.fit$FSC.A >= r3[1]) & (traits.fit$FSC.A <= r3[2])] <- 3
traits.fit$length[(traits.fit$FSC.A >= r10[1]) & (traits.fit$FSC.A <= r10[2])] <- 10

traits.fit <- traits.fit[!is.na(traits.fit$length),]
traits.fit$FSC.A.raw <- 10^traits.fit$FSC.A


ss <- list()
ss$fit.A <- lm(length ~ FSC.A.raw, data = traits.fit)
ss$slope_A <- ss$fit.A$coefficients[[2]]
ss$intercept_A <- ss$fit.A$coefficients[[1]]
```

```{r}
#| label: plot_fit
#| 

traits |> ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bw = 0.00001) + 
  geom_vline(xintercept = log10(ss_repaired$data$mean_FSC.A), col = "green") +
  geom_vline(xintercept = rl, col = "yellow")

traits |> ggplot(aes( x = FSC.A)) + 
  ggplot2::geom_density(bw = 0.00001, bounds = range(c(r1, r3, r10))) + 
  geom_vline(xintercept = log10(ss_repaired$data$mean_FSC.A), col = "green") +
  geom_vline(xintercept = rl, col = "yellow")


scattermore::scattermoreplot(
  traits.fit$FSC.A.raw, 
  traits.fit$length,
  xlim = c(0, 3000000), 
  ylim = c(0, 10),
  xlab = "FSC.A raw",
  ylab = "length in micrometer",
  main = c(
    paste("Means: slope = ", format(ss_repaired$slope_A, scientific = TRUE, digits = 3), "  intercept = ",format(ss_repaired$intercept_A, scientific = TRUE, digits = 3)),
    paste("All  : slope = ", format(ss$slope_A, scientific = TRUE, digits = 3), "  intercept = ",format(ss$intercept_A, scientific = TRUE, digits = 3))
  )    
  
)
abline(ss$fit.A)
abline(h = 0, v = 0)

points(
  ss_repaired$data$mean_FSC.A, 
  ss_repaired$data$diameter_micrometer,
  col = "blue"
)
abline(ss_repaired$fit.A, col = "blue")



scattermore::scattermoreplot(
  traits.fit$FSC.A.raw, 
  traits.fit$length,
  xlim = c(0, 17700000), 
  ylim = c(0, 90),
  xlab = "FSC.A raw",
  ylab = "length in micrometer",
  main = c(
    paste("Means: slope = ", format(ss_repaired$slope_A, scientific = TRUE, digits = 3), "  intercept = ",format(ss_repaired$intercept_A, scientific = TRUE, digits = 3)),
    paste("All  : slope = ", format(ss$slope_A, scientific = TRUE, digits = 3), "  intercept = ",format(ss$intercept_A, scientific = TRUE, digits = 3))
  )    
)
abline(ss$fit.A)
abline(h = 0, v = 0)
abline(ss_repaired$fit.A, col = "blue")
abline(v = 10^c(0.30103, 7.22472), col = "red")
```

### Individual borders
```{r}
#| label: peaks_2
#| 

r1 <- c(4.6, 5.2)
r3 <- c(5.5, 6.02)
r10 <- c(6.03, 6.6)
rl <- c(r1, r3, r10)


<<do_fit>>
```

```{r}
<<plot_fit>>
```

