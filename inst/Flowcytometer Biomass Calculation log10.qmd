---
title: "Flowcytometer Biomass Calculation"
author: "Rainer M Krug & Romana Limberger"
format: 
  html:
    toc: true
    toc-depth: 5
    toc-location: left
    code-fold: true
    embed-resources: true
params:
  pre_processed_dir: "/Volumes/LEEF-1_archive/LEEF.archived.data/LEEF/3.archived.data/pre_processed/"
  extracted_dir: "/Volumes/LEEF-1_archive/LEEF.archived.data/LEEF/3.archived.data/extracted/"
  output_dir: "~/Desktop/flowcytometer_biomass/"
  timestamp: 20220309
  particles: "bacteria"
  use_H: TRUE
  excl_FSCA_0: TRUE
---


## Introduction

Details the calculation of the biomass and the problem occuring with `FSC.A == 0`

```{r}
#| label: setup

library(LEEF.analysis)
library(LEEF.measurement.flowcytometer)
library(scattermore)
```

## Read Size Standard
```{r}
#| label: get_ss

ss_replacement <- list()
ss_replacement$data <- data.frame(
  diameter_micrometer = c(1L, 3L, 10L), 
  mean_FSC.A = c(96374L, 653207L, 1855322L), 
  mean_FSC.H = c(100606L, 661955L, 1252168)
)

ss_replacement$fit.A <- lm(ss_replacement$data$diameter_micrometer ~ ss_replacement$data$mean_FSC.A)
ss_replacement$slope_A <- ss_replacement$fit.A$coefficients[[2]]
ss_replacement$intercept_A <- ss_replacement$fit.A$coefficients[[1]]

ss_replacement$fit.H <- lm(ss_replacement$data$diameter_micrometer ~ ss_replacement$data$mean_FSC.H)
ss_replacement$slope_H <- ss_replacement$fit.H$coefficients[[2]]
ss_replacement$intercept_H <- ss_replacement$fit.H$coefficients[[1]]


ss_repaired <- list()
ss_repaired$data <- data.frame(
  diameter_micrometer = c(1L, 3L, 10L), 
  mean_FSC.A = c(102045L, 641752L, 1959230L), 
  mean_FSC.H = c(106576L, 648403L, 1303073L)
)

ss_repaired$fit.A <- lm(ss_repaired$data$diameter_micrometer ~ ss_repaired$data$mean_FSC.A)
ss_repaired$slope_A <- ss_repaired$fit.A$coefficients[[2]]
ss_repaired$intercept_A <- ss_repaired$fit.A$coefficients[[1]]

ss_repaired$fit.H <- lm(ss_repaired$data$diameter_micrometer ~ ss_repaired$data$mean_FSC.H)
ss_repaired$slope_H <- ss_repaired$fit.H$coefficients[[2]]
ss_repaired$intercept_H <- ss_repaired$fit.H$coefficients[[1]]
```




## Re-gate and calculate density
```{r}
#| label: re_gate_density

if (params$use_H){
  gates_coordinates <- data.frame(
    bacteria1 = c(3.301029996, 3.301029996, 7.204119983, 7.204119983), 
    bacteria2 = c(0,           3.301029996, 6.301029996, 0.         ), 
    LNA =       c(3.301029996, 4.579784,    NA,          NA         ), 
    MNA =       c(4.579785,    4.954243,    NA,          NA         ), 
    HNA =       c(4.954244,    7.204119983, NA,          NA         ), 
    algae1 =    c(3,           3,           7.204119983, 7.204119983), 
    algae2 =    c(3.301029996, 7.204119983, 7.204119983, 3.301029996)
  )
} else {
  gates_coordinates <- data.frame(
    bacteria1 = c(3.477121255,  3.477121255, 7.204119983, 7.204119983),
    bacteria2 = c(0,            3.301029996, 6.447158031, 0          ),
    LNA =       c(3,            4.579784,    NA,          NA         ),
    MNA =       c(4.579785,     4.954243,    NA,          NA         ),
    HNA =       c(4.954244,     7,           NA,          NA         ),
    algae1 =    c(3,            3,           7,           7          ),
    algae2 =    c(4,            7,           7,           4          )
  )
}

fsa <- readRDS(
  file.path(
    params$extracted_dir, 
    paste0("LEEF.fast.flowcytometer.", as.character(params$timestamp)),
    "flowcytometer_fsa_ungated.rds"
  )
)
  
# log transform everything which had not been transformed in the pipeline
fsa <- flowCore::transform(
  fsa,
  flowCore::transformList(
    c("FL2-A", "FL1-H", "FL3-H", "FL4-H", "FSC-H", "SSC-H"),
    flowCore::truncateTransform("truncate at 1")
  )
)
fsa <- flowCore::transform(
  fsa,
  flowCore::transformList(
    c("FL2-A", "FL1-H", "FL3-H", "FL4-H", "FSC-H", "SSC-H"), 
    "log10"
  )
)


flow.data <- utils::read.csv(
  file.path(
     params$extracted_dir, 
    paste0("LEEF.fast.flowcytometer.", as.character(params$timestamp)),
    "flowcytometer_ungated.csv")
)


flowcytometer_density <- LEEF.measurement.flowcytometer::extractor_flowcytometer_density(
  gates_coordinates = gates_coordinates, 
  fsa = fsa,
  flow.data = flow.data,
  use_H = params$use_H, 
  excl_FSCA_0 = params$excl_FSCA_0,
  dens_back = TRUE
)

traits <- LEEF.measurement.flowcytometer::extract_traits(
  particles = params$particles,
  metadata_flowcytometer = utils::read.csv(
    file.path(
      params$extracted_dir, 
      paste0("LEEF.fast.flowcytometer.", as.character(params$timestamp)),
      "metadata_flowcytometer.csv")
  ),
  use_H = params$use_H, 
  excl_FSCA_0 = params$excl_FSCA_0,
  timestamp = params$timestamp,
  gates_coordinates = gates_coordinates,
  fsa = fsa
)[[1]]

paste0("Count       : ",  traits$FSC.A |> length())
paste0("Range       : ",  paste0(traits$FSC.A |> range(), collapse = " -- "))
paste0("Portion == 0: ", ((traits$FSC.A == 0) |> sum()) / (traits$FSC.A |> length()))
traits$FSC.A |> table() |> head()
```

## Some Plots


### Size Standards

#### Repaired
```{r}
#| label: plot_ss_repaired
#| 

plot(
  ss_repaired$data$mean_FSC.A, 
  ss_repaired$data$diameter_micrometer, 
  xlim = c(0, 16777215), 
  ylim = c(0, 100),
  main = "Repaired - FSC.A"
)
abline(a = ss_repaired$intercept_A, b = ss_repaired$slope_A)
abline(v = 10^min(traits$FSC.A), col = "green")
abline(v = 10^max(traits$FSC.A), col = "red")
abline(h = 0)

plot(
  ss_repaired$data$mean_FSC.H, 
  ss_repaired$data$diameter_micrometer, 
  xlim = c(0, 7111463), 
  ylim = c(0, 110),
  main = "Repaired - FSC.H"
)
abline(a = ss_repaired$intercept_H, b = ss_repaired$slope_H)
abline(v = 10^min(traits$FSC.H), col = "green")
abline(v = 10^max(traits$FSC.H), col = "red")
abline(h = 0)
```

#### Replacement
```{r}
#| label: plot_ss_replacement
#| 

plot(
  ss_replacement$data$mean_FSC.A, 
  ss_replacement$data$diameter_micrometer, 
  xlim = c(0, 3000000),
  ylim = c(0, 20),
  main = "Replacement - FSC.A"
)
abline(a = ss_replacement$intercept_A, b = ss_replacement$slope_A)
abline(v = 10^min(traits$FSC.A))
abline(v = 10^max(traits$FSC.A))
abline(h = 0)

plot(
  ss_replacement$data$mean_FSC.H, 
  ss_replacement$data$diameter_micrometer, 
  xlim = c(0, 1500000), 
  ylim = c(0, 20),
  main = "Replacement - FSC.H"
)
abline(a = ss_replacement$intercept_H, b = ss_replacement$slope_H)
abline(v = 10^min(traits$FSC.H))
abline(v = 10^max(traits$FSC.H))
abline(h = 0)
```

### Scatterplots

#### FSC-A auf der x-Achse und SSC-A auf der y-Achse


```{r}
scattermoreplot(
  traits$FSC.A, 
  log10(traits$FSC.H),
  xlab = "log10(FSC.A)", 
  ylab = "log10(SSC.A)"
)
```

#### FSC-A auf der x-Achse und FL1-A auf der y-Achse

```{r}
scattermoreplot(
  traits$FSC.A, 
  log10(traits$FL1.A), 
  xlab = "log10(FSC.A)", 
  ylab = "log10(FL1.A)"
)
```

#### FSC-A auf der x-Achse und FL3-A auf der y-Achse

```{r}
scattermoreplot(
  traits$FSC.A, 
  traits$FL3.A, 
  xlab = "log10(FSC.A)", 
  ylab = "log10(FL3.A)"
)
```

#### FSC-A auf der x-Achse und FSC-H auf der y-Achse

```{r}
scattermoreplot(
  traits$FSC.A, 
  log10(traits$FSC.H), 
  xlab = "log10(FSC.A)", 
  ylab = "log10(FSC.H)"
)
```


### And some more density plots


#### log10 FSC.A and FSC.H

```{r}
#| label: densities_log

traits$FSC.A |> density(bw = 0.02) |> plot(main = "log10(FSC.A)")
traits$FSC.H |> log10() |> density(bw = 0.02) |> plot(main = "log10(FSC.H)")
```


## Now to the sizes
### Calculate them
```{r}
#| label: calc_length
#|

traits$length_A <- 10^(traits$FSC.A) * ss_repaired$slope_A + ss_repaired$intercept_A
traits$volume_A <- 4/9 * pi * traits$length_A^3

traits$length_H <- 10^traits$FSC.H * ss_repaired$slope_H + ss_repaired$intercept_H
traits$volume_H <- 4/9 * pi * traits$length_H^3
```

### And some Plots
```{r}
#| label: size_A
#|
traits$length_A |> density(na.rm = TRUE) |> plot(main = "FSC.A - length in micro meter")
traits$length_A |> density(na.rm = TRUE, to = 0.5) |> plot(main = "FSC.A - length in micro meter (l < 0.5")
traits$length_A |> density(na.rm = TRUE, to = 0.3) |> plot(main = "FSC.A - length in micro meter (l < 0.2)")
x <- sort(traits$length_A)
y <- cumsum(sort(traits$length_A))
y <- y / max(y)
scattermoreplot(x, y, xlab = "length_A (micro m)", ylab = "proportion", main = "Cumulative Volume over particle size")
abline(h = 0.99, col = "red")
```

### FSC.H based (just for info)
```{r}
#| label: size_H
#| eval: false

traits$length_H |> density(na.rm = TRUE) |> plot(main = "FSC.H - length in micro meter")
traits$length_H |> density(na.rm = TRUE, to = 2) |> plot(main = "FSC.H - length in micro meter (l < 2)")
traits$length_H |> density(na.rm = TRUE, to = 0.5) |> plot(main = "FSC.H - length in micro meter (l < 0.5)")
```


```{r}
(traits$length_H - traits$length_A) |>
  density(na.rm = TRUE) |>
  plot(main = "length_H - length_A")

(traits$length_H - traits$length_A) |>
  density(na.rm = TRUE, from = -1, to = 1) |>
  plot(main = "length_H - length_A")
```

