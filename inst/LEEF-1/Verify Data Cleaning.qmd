---
title: "Reclassification"
author: "Rainer M Krug"
date: "06/05/2022"

output: 
  html:
    toc: true
    toc-location: left
    toc-depth: 5
    code-fold: true
    embed-resources: true
execute:
  cache: TRUE
params:
  db: "~/RRD.Reclassification_final/LEEF.RRD.v1.8.5_3.sqlite"
  version_tag: "v1.8.5"
  base: "https://github.com/LEEF-UZH/LEEF.parameter/raw/"
  output_dir: "~/RRD.Reclassification_final/"
  archive_dir: "/Volumes/LEEF-1_archive/"
  pre_processed_folder: "/Volumes/LEEF-1_archive/LEEF.archived.data/LEEF/3.archived.data/pre_processed/"
  extracted_dir: "/Volumes/LEEF-1_archive/LEEF.archived.data/LEEF/3.archived.data/extracted/"
  toc: "/Volumes/LEEF/0.TOC/LEEF-1/toc.rds"
  cores: 7
---

# This document will run some tests on the RRD to ee if the final data cleaning has been successful

```{r}
#| label: setup
#| cache: false
# .libPaths(c("/opt/R/library", .libPaths()))
library(LEEF.analysis)
library(dplyr)
library(ggplot2)
library(lubridate)

options(RRDdb = params$db)
```

# Species lists
```{r}
#| label: species_per_method
#| 

options(RRDdb = params$db)
densities <- db_read_table(table = "density") %>% collect() %>% arrange(day)
table(densities$species, densities$measurement)
```

# Some Plots

## Density of Species per bottle as measured by measurement over time

\pagebreak

### Bemovi Magnification 16
```{r}
#| label:  dens_species_b_16_raw
#| fig-height: 16
#| 

plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "bemovi_mag_16",
  species_set_id = NULL
)
```

\pagebreak

### Bemovi Magnification 25
```{r}
#| label:  dens_species_b_25_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "bemovi_mag_25",
  species_set_id = NULL
)
```

\pagebreak

### Bemovi Magnification 25 non_cropped
```{r}
#| label:  dens_species_b_25_non_crop_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "bemovi_mag_25_non_cropped",
  species_set_id = NULL
)
```

\pagebreak

### Bemovi Magnification 25 cropped
```{r}
#| label:  dens_species_b_25_crop_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "bemovi_mag_25_cropped",
  species_set_id = NULL
)
```

\pagebreak

### Flowcam 
#### All
```{r}
#| label:  dens_species_fcam_rest_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "flowcam",
  species_set_id = NULL
)
```

\pagebreak

#### Algae
```{r}
#| label:  dens_species_fcam_al_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "flowcam",
  species_set_id = "flowcam_algae"
)
```

\pagebreak

#### Ciliates
```{r}
#| label:  dens_species_fcam_cil_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "flowcam",
  species_set_id = "flowcam_ciliates"
)
```

\pagebreak

### Flowcytometer
```{r}
#| label:  dens_species_fcyt_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "flowcytometer",
  species_set_id = NULL
)
```

\pagebreak

### Manualcount
```{r}
#| label:  dens_species_mc_raw
#| fig-height: 16
#| 
plot_density_species_per_bottle_per_timestamp(
  params$db, 
  transform_density_4throot = FALSE, 
  measurement = "manualcount",
  species_set_id = NULL
)
```

\pagebreak

### Percent O~2~

```{r}
#| label:  percent_o2_raw
#| fig-height: 16
#| 
plot_o2s_per_bottle_per_timestamp(
  params$db
)
```

\pagebreak

### TOC and TC

```{r}
#| label:  toc_raw_TOC_TC
#| fig-height: 16
#| 
plot_tocs_per_bottle_per_timestamp(
  params$db,
  type = c("TOC", "TC")
)
```

\pagebreak

### IC and TN


```{r}
#| label:  toc_raw_IC_TN
#| fig-height: 16
#| 
plot_tocs_per_bottle_per_timestamp(
  params$db,
  type = c("IC", "TN")
)
```

## Density plots

### Flowcytometer FSC.A
```{r}
#| label: plot_dens_FSC_A
#| eval: false

x <- db_read_table(table = "flowcytometer__flowcytometer_traits") |>
  select(fsc.a) |>
  collect() |>
  unlist()

density(x)
```



# The following aspects are tested

## 1. [x] Removing "test sampling days" and classes not of interest. Some test samplings are still in the RRD (they have sampling year 3000).
```{r}
#| label: test_1
#| 
 

tbls <- c(
  "bemovi_mag_16__mean_density_per_ml",
  "bemovi_mag_25__mean_density_per_ml",
  "bemovi_mag_25__mean_density_per_ml_cropped",
  "bemovi_mag_25__mean_density_per_ml_non_cropped",
  
  "bemovi_mag_16__morph_mvt",
  "bemovi_mag_25__morph_mvt",
  "bemovi_mag_25__morph_mvt_cropped",
  "bemovi_mag_25__morph_mvt_non_cropped",
  
  "flowcam__algae_density",
  "flowcam__algae_traits",
  
  "flowcytometer__flowcytometer_density"
)

sp <- c(
  "airbubbles",
  "OtherCiliate", 
  "HNA",
  "LNA", 
  "MNA",
  "Debris_and_other", 
  "Cryptomonas"
)

sp_flowcam <- c(
  "Dexiostoma",
  "Coleps_irchel",
  "Colpidium",
  "Loxocephallus",
  "Tetrahymena"
)


for (tbl in tbls){
  dat <- db_read_table(table = tbl)
  if (grepl("flowcam", tbl)){
    x <- dat |>
      select(species) |> 
      distinct() |> 
      collect() |>
      filter(species %in% vars(sp_flowcam)) |>
      unlist()
    if (length(x) == 0){
      cat(tbl, ": OK", "\n")
    } else {
      cat("ERROR: ", tbl, "the following species should be filtered out: ", paste0(x, collapse = ", "), "\n")
    }
  }
  

  x <- dat |>
    select(species) |> 
    distinct() |> 
    collect() |>
    filter(species %in% vars(sp)) |>
    unlist()
  if (length(x) == 0){
    cat(tbl, ": OK", "\n")
  } else {
    cat("ERROR: ", tbl, "the following species should be filtered out: ", paste0(x, collapse = ", "), "\n")
  }
}
```

                
                
## 2. [x] Exclusion of videos with `Moving Background` 

```{r}
#| label: test_2
#| 
tbls <- c(
  # "bemovi_mag_16__mean_density_per_ml",
  # "bemovi_mag_25__mean_density_per_ml",
  # "bemovi_mag_25__mean_density_per_ml_cropped",
  # "bemovi_mag_25__mean_density_per_ml_non_cropped",
  
  "bemovi_mag_16__morph_mvt",
  "bemovi_mag_25__morph_mvt",
  "bemovi_mag_25__morph_mvt_cropped",
  "bemovi_mag_25__morph_mvt_non_cropped"
)

mb_25x <- c(
  "20211013_00058", "20211103_00037", "20211105_00066",
  "20211117_00016", "20211124_00007", "20211210_00031",
  "20211210_00085", "20220105_00034", "20220119_00058",
  "20220119_00070", "20220119_00088", "20220124_00085",
  "20220131_00013", "20220131_00034", "20220131_00043",
  "20220131_00082", "20220131_00085", "20220131_00088",
  "20220207_00013", "20220228_00004", "20220228_00019",
  "20220228_00067", "20220304_00034", "20220408_00088",
  "20220413_00052", "20220502_00076", "20220509_00086",
  "20220516_00076", "20220523_00058", "20220601_00064",
  "20220617_00082", "20220620_00076", "20220622_00076",
  "20220624_00055", "20220629_00082", "20210924_00001",
  "20210929_00001", "20210929_00064", "20211001_00012",
  "20211001_00028", "20211008_00021", "20211013_00076",
  "20211015_00077", "20211022_00088", "20211105_00022",
  "20211105_00024", "20211203_00016", "20211203_00040",
  "20211203_00061", "20211215_00043", "20220107_00054",
  "20220119_00010", "20220126_00025", "20220131_00079",
  "20220202_00043", "20220204_00061", "20220204_00067",
  "20220207_00010", "20220207_00022", "20220304_00076",
  "20220427_00061", "20220525_00010", "20220530_00016",
  "20220601_00050", "20220620_00010", "20220620_00073",
  "20220622_00010", "20220622_00073", "20220704_00055",
  "20211129_00077", "20211203_00003", "20211203_00009",
  "20211208_00002", "20220126_00046", "20220126_00049",
  "20220204_00002", "20220207_00020", "20220207_00052",
  "20211001_00054", "20211001_00066", "20211001_00069",
  "20211001_00079", "20211022_00042", "20211022_00067",
  "20211027_00007", "20211101_00081", "20211129_00001",
  "20211203_00050", "20211220_00035", "20220126_00054",
  "20220126_00067", "20220126_00068", "20220207_00031",
  "20220207_00043", "20220207_00054"
)

mb_16x <- c(
  "20210924_00108", "20211020_00133", "20211025_00140",
  "20211101_00151", "20211105_00129", "20211108_00121",
  "20220131_00156" ,"20220525_00135"
)

mb <- c(mb_16x, mb_25x)

for (tbl in tbls){
  x <- db_read_table(table = tbl) |>
    select(file) |> 
    distinct() |> 
    collect() |>
    filter(file %in% vars(mb)) |>
    unlist()
  if (length(x) == 0){
    cat(tbl, ": OK", "\n")
  } else {
    cat("ERROR: ", tbl, "the following movies contain Moving Background but are not filtered out: ", paste0(x, collapse = ", "), "\n")
  }
}
```



## 3. [x] Exclusion of *Staurastrum gracile* < 0.95 probability
Exclusion of particles that have been classified as *Staurastrum gracile* (i.e. Staurastrum1) with a probability of less than 95% (already incorporated in RRD, code not run here and not completely up-to-date. Rainer has the complete up-to-date code)
```{r}
#| label: test_3
#| 

tbls <- c(
  #"flowcam__algae_density",
  "flowcam__algae_traits"
)

sp <- "Staurastrum1"

for (tbl in tbls){
  x <- db_read_table(table = tbl) |>
    filter(species == "Staurastrum1" & species_probability < 0.95) |>
    select(species, species_probability) |> 
    distinct() |> 
    collect() |>
    unlist()
  if (length(x) == 0){
    cat(tbl, ": OK", "\n")
  } else {
    cat("ERROR: ", tbl, "Table still contains Staurastrum1 with probability < 0.95 \n")
  }
}
```

## 4. [x] Exclusion of 20220622 25x videos (duplicates of 20220620) from traits and setting respective densities to NA

```{r}
#| label: test_4
#| 
tbls <- c(
  # "bemovi_mag_25__mean_density_per_ml",
  # "bemovi_mag_25__mean_density_per_ml_cropped",
  # "bemovi_mag_25__mean_density_per_ml_non_cropped",
  
  "bemovi_mag_25__morph_mvt",
  "bemovi_mag_25__morph_mvt_cropped",
  "bemovi_mag_25__morph_mvt_non_cropped"
)

ts <- 20220622

for (tbl in tbls){
  x <- db_read_table(table = tbl) |>
    select(timestamp) |>
    filter(timestamp == ts) |>
    collect() |> 
    unlist()
  if (length(x) == 0){
    cat(tbl, ": OK", "\n")
  } else {
    cat("ERROR: ", tbl, "Still contains timestamp ", ts, "\n")
  }
}
```

## 5. [ ] Adding density=0 for some special cases (algae clumps not tracked and bottle contamination. See details in section)
## 6. [ ] Manual correction of time series based on observations during the experiment
## 7. [ ] Exclusion of time series that are (almost completely) wrong classifications or only noise
## 8. [ ] Removing the linear trend in the water chemistry 

```{r}
#| label: toc_detrending

db_read_table(table = "toc__toc") %>%
  ggplot(aes(position, conc))+
  facet_wrap(light_phase~inj_type) +
  geom_smooth(col="red", method = "lm")+
  geom_smooth(aes(y=conc_org), method = "lm", col="blue")+
  labs(x="Bottle sampling order")+
  theme_bw()


```

## 9. [X] exclusion of all flowcytometer particles where FSC.A < 2 (raw FSC.A < 100)
```{r}
#| label: test_9
#| eval: true

tbls <- c(
  "flowcytometer__flowcytometer_traits"
)

for (tbl in tbls){
  x <- db_read_table(table = tbl) |>
    select(fsc.a) |> 
    filter(fsc.a < 2) |>
    collect() |>
    unlist()
  if (length(x) == 0){
    cat(tbl, ": OK", "\n")
  } else {
    cat("ERROR: ", tbl, "Still contains ", length(x), " particles with `FSC.A` < 2 \n")
  }
}
```
## 10. [ ] Fix EAWAG daten 

```{r}
#| label: test_5
#| eval: false
tbls <- c(
  "flowcytometer__flowcytometer_traits"
)

ewag_timestamps <- c("20220404", "20220406", "20220408", "20220411", "20220413", "20220415", "20220418", "20220420", "20220422", "20220425", "20220427")

for (tbl in tbls){
  x <- db_read_table(table = "flowcytometer__flowcytometer_density") |>
    select(timestamp, date) |> 
    collect()
  
  eawag <- (x$timestamp %in% ewag_timestamps)
  x$site <- "UZH"
  x$site[eawag] <- "EAWAG"

  x <- x[eawag,]$site |> unique()

  if (x == "EAWAG"){
    cat(tbl, ": OK", "\n")
  } else {
    browser()
    cat("ERROR: ", tbl, "Still contains ", length(x), " non-EAWAG \n")
  }
}
```
