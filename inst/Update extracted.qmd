---
title: "Update `extracted`"
author: "Rainer M Krug"
date: "06/05/2022"
input:
  html_document:
    dev: png
    fig_width: 10
    fig_height: 12
    toc: true
    toc_float: true
    toc_collapsed: true
    code_folding: hide
params:
  cores: 7
  input_dir: ~/reclassification/
  extracted_dir: /Volumes/LEEF/LEEF.archived.data/LEEF/3.archived.data/extracted/
---

```{r}
#| label = "setup_reclass",
#| include = FALSE
knitr::opts_chunk$set(
  echo = TRUE,
  eval = TRUE,
  message = TRUE,
  warning = TRUE
)
library(pbmcapply)
library(yaml)
library(LEEF.analysis)
```

# Preparation

## Check Extracted Directory
Make sure, that it points to a writable location containing the extracted data

```{r}
#| label = "setArchive"
testfile <- file.path(params$extracted_dir, "test.tmp")
file.create(testfile)
if (!file.exists(testfile)){
  stop("The location ", testfile, " is not writable!")
}
unlink(testfile)
rm(testfile)
```

# Update `bemovi.mag.16`

## Define paths and files
```{r}
#| label = "define_bemovi_mag_16_parameter"
source_dir <- file.path(params$input_dir, "bemovi_mag_16")
source_files <- list.files(source_dir, pattern = ".rds$", recursive = TRUE)
timestamps <- sapply( strsplit(source_files, "\\."), "[[", 2)
dest_files <- basename(
  paste0(sapply( strsplit(source_files, "\\."), "[[", 1), ".", sapply( strsplit(source_files, "\\."), "[[", 3))
)
dest_files <- paste0(
  toupper(substring(dest_files, 1, 1)), 
  substring(dest_files, 2)
)

dest_rds <- file.path(
  params$extracted_dir, paste0("LEEF.bemovi.mag.16.bemovi.", timestamps), "5 - merged data", dest_files
)

dest_csv <- file.path(
  params$extracted_dir, paste0("LEEF.bemovi.mag.16.bemovi.", timestamps), gsub( "\\.rds$", ".csv", dest_files)
)
  
csv_files <- gsub("\\.rds$", ".csv", source_files)
```

## Update `.rds` files
```{r}
#| label = "update_bemovi_mag_16_rds"
pbmcapply::pbmclapply(
  sample(length(source_files)),
  function(i){
    file.copy(
      file.path(source_dir, source_files[i]),
      dest_rds[i],
      overwrite = TRUE
    )
  }, 
  mc.preschedule = FALSE,
  mc.cores = 2
)
```

## Update `.csv` files

```{r}
#| label = "update_bemovi_mag_16_csv"
pbmcapply::pbmclapply(
  sample(length(source_files)),
  function(i){
    write.csv(
      readRDS(file.path(source_dir, source_files[i])),
      dest_csv[i]
    )
  }, 
  mc.preschedule = FALSE,
  mc.cores = params$cores
)
```



# Update `bemovi.mag.25`

## Define paths and files
```{r}
#| label = "define_bemovi_mag_25_parameter"
source_dir <- file.path(params$input_dir, "bemovi_mag_25")
source_files <- list.files(source_dir, pattern = ".rds$", recursive = TRUE)
timestamps <- sapply( strsplit(source_files, "\\."), "[[", 2)
dest_files <- basename(
  paste0(sapply( strsplit(source_files, "\\."), "[[", 1), ".", sapply( strsplit(source_files, "\\."), "[[", 3))
)
dest_files <- paste0(
  toupper(substring(dest_files, 1, 1)), 
  substring(dest_files, 2)
)

dest_rds <- file.path(
  params$extracted_dir, paste0("LEEF.bemovi.mag.25.bemovi.", timestamps), "5 - merged data", dest_files
)

dest_csv <- file.path(
  params$extracted_dir, paste0("LEEF.bemovi.mag.25.bemovi.", timestamps), gsub( "\\.rds$", ".csv", dest_files)
)
  
csv_files <- gsub("\\.rds$", ".csv", source_files)
```

## Update `.rds` files
```{r}
#| label = "update_bemovi_mag_25_rds"
pbmcapply::pbmclapply(
  sample(length(source_files)),
  function(i){
    file.copy(
      file.path(source_dir, source_files[i]),
      dest_rds[i],
      overwrite = TRUE
    )
  }, 
  mc.preschedule = FALSE,
  mc.cores = 2
)
```

## Update `.csv` files

```{r}
#| label = "update_bemovi_mag_25_csv"
pbmcapply::pbmclapply(
  sample(length(source_files)),
  function(i){
    write.csv(
      readRDS(file.path(source_dir, source_files[i])),
      dest_csv[i]
    )
  }, 
  mc.preschedule = FALSE,
  mc.cores = params$cores
)
```

# Update `flowcam`
## Define paths and files
```{r}
#| label = "define_flowcytometer_parameter"
source_dir <- file.path(params$input_dir, "reclassification flowcam_b_02_20220128_30000000", "flowcam_b_02_20220128_30000000")
source_files <- list.files(source_dir, pattern = ".rds$", recursive = TRUE)
timestamps <- sapply( strsplit(source_files, "\\."), "[[", 2)
dest_files <- basename(
  paste0(sapply( strsplit(source_files, "\\."), "[[", 1), ".", sapply( strsplit(source_files, "\\."), "[[", 3))
)

dest_csv <- file.path(
  params$extracted_dir, paste0("LEEF.fast.flowcam.", timestamps), gsub( "\\.rds$", ".csv", dest_files)
)
  
csv_files <- gsub("\\.rds$", ".csv", source_files)
```

## Update `.csv` files

```{r}
#| label = "update_flowcytometer_csv"
pbmcapply::pbmclapply(
  sample(length(source_files)),
  function(i){
    write.csv(
      readRDS(file.path(source_dir, source_files[i])),
      dest_csv[i]
    )
  }, 
  mc.preschedule = FALSE,
  mc.cores = params$cores
)
```


# Re-create overlays


```{r overlays, eval = TRUE}
update_overlays(
  params = params,
  overwrite = FALSE
)
```
